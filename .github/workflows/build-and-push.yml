name: build-and-push

on:
  push:
    tags:
      - "**.**.**"
      - feature/**/**
      - experiment/**/**/**
    paths:
      - src/**
      - .github/workflows/build-and-push.yml
  workflow_dispatch:

jobs:
  build-and-push:
    name: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        images:
          - enabled: true
            username: conan
            containerName: emscripten-conan-devcontainer
        common:
          - cacheToDest: /tmp/.buildx-cache-new
            cacheFromSrc: /tmp/.buildx-cache

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v25
        with:
          files: |
            src/*
            .github/workflows/build-and-push.yml

      - name: Declare run state
        id: run_state
        run: |
          ref_type="${{ github.ref_type }}"
          enabled="${{ matrix.images.enabled }}"
          any_modified="${{ steps.changed_files.outputs.any_modified }}"
          event_name="${{ github.event_name }}"

          if [ "$ref_type" == tag ] && \
             [ "$enabled" == true ] && \
             ( \
               [ "$any_modified" == true ] || \
               [ "$event_name" == workflow_dispatch ] \
             );
          then
            echo "run_docker_build=true" >> $GITHUB_OUTPUT
            echo "::debug::Docker build will carry out as expected."
          else
            echo "run_docker_build=false" >> $GITHUB_OUTPUT
            echo "Docker build is cancelled as the required conditions for a run haven't been met"
          fi

          echo "Ref type: $ref_type"
          echo "Enabled: $enabled"
          echo "Any modified: $any_modified"
          echo "Event name: $event_name" 

      - name: Variables
        id: variables
        run: |
          image_name=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.images.containerName }}
          repo_tag="${{ github.ref_name }}"
          image_tag=${repo_tag//\//-}
          dev_image_tag="${image_tag}"
          image_ref="${image_name}:${image_tag}"
          short_image_ref="${{ matrix.images.containerName }}:${image_tag}"
          dev_image_ref="$image_name:$dev_image_tag"
          short_dev_image_ref="${{ matrix.images.containerName }}:$dev_image_tag"

          output_variables='
            image_name
            image_tag
            dev_image_tag
            image_ref
            dev_image_ref
            short_image_ref
            short_dev_image_ref
          '

          for i in $output_variables; do
            echo "$i=${!i}" >> $GITHUB_OUTPUT; 
          done

      - name: Set up Docker Buildx
        # if: steps.run_state.outputs.run_docker_build == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        # if: steps.run_state.outputs.run_docker_build == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push ${{ steps.variables.outputs.short_image_ref }}
        # if: steps.run_state.outputs.run_docker_build == 'true'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ steps.variables.outputs.image_name }}:latest
            ${{ steps.variables.outputs.image_ref }}
          file: src/Dockerfile.emscripten-conan.dev
          push: true
          cache-from: type=local,src=${{ matrix.common.cacheFromSrc }}
          cache-to: type=local,mode=max,dest=${{ matrix.common.cacheToDest }}
          build-args: |
            ROOT_PASS=${{ secrets.DOCKER_IMAGE_ROOT_PASS }}
            USERNAME=${{ matrix.images.username }}

      - name: Build devcontainer ${{ steps.variables.outputs.short_dev_image_ref }}
        # if: steps.run_state.outputs.run_docker_build == 'true'
        id: devcontainer_build
        uses: devcontainers/ci@v0.2
        env:
          IMAGE_NAME: ${{ steps.variables.outputs.image_name }}
          IMAGE_TAG: ${{ steps.variables.outputs.image_tag }}
        with:
          imageName: ${{ steps.variables.outputs.image_name }}
          imageTag: ${{ steps.variables.outputs.image_tag }}
          subFolder: src
          runCmd: /scripts/devcontainer-check.sh

      - name: Set Docker Hub description
        # if: steps.run_state.outputs.run_docker_build == 'true'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ steps.variables.outputs.image_name }}
          short-description: Emscripten + Conan devcontainers
          readme-filepath: src/DOCKER_README.md

      - name: Move cache
        # if: steps.run_state.outputs.run_docker_build == 'true'
        run: |
          rm -rf ${{ matrix.common.cacheFromSrc }}
          if [ -d ${{ matrix.common.cacheFromSrc }} ];
          then
            mv ${{ matrix.common.cacheToDest }} ${{ matrix.common.cacheFromSrc }}
          fi
